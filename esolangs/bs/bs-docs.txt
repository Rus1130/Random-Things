========== TAPE COMMANDS ==========

Pointer Movement
    > - shift pointer right
    < - shift pointer left

Value Handling
    + - incrememnt cell
    - - decrement cell
    | - if value positive, change to 1, if 0 or negative change to 0

I/O
    . - read cell output cell
    q - read cell and output, but add spaces
    , - write to current cell (one character only)
    ; - literal write to current cell (number only) (an inputted 5 will write 5 to the cell)

Loop
    [ … ] - if cell at pointer is not 0, run … until cell is 0

Conditionals
    = … $ - if cell is 0, run …
    ! … $ - if cell is not 0, run …

    =value? … $ - if cell is value, run …
    !value? … $ - if cell is not value, run …

Arithmatic (current cell (operator) right of current cell = outputs to current cell)
    a = addition
    s = subtraction
    m = multiplication
    d = division
    r = modulus

Typesets
    tD - Decimal
    tB - Binary
    tO - Octal
    tX - Hexadecimal
    tU - Unicode

Misc
    µ - rocket ship!
    x - fixes any illegal values (like 1.5)
    W - controls pointer wrapping
    \0-4 - runs a bs program
    E - terminates program
    l - set current cell to length of stack

========== STACK COMMANDS ==========

Stack Manipulation
    v - push cell value to top
    : - set current cell to top value and pop
    * - duplicate top value
    @ - reverse stack order

Conditionals
    # … $ - if cell equals top of stack, run …
