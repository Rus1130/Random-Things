Heap: Variables that are first created are automatically put into the heap. They cannot be read or written to.
Callstack: Variables can be moved into the callstack so they can be modified.

Structure of variables:
{name: "variable_name", value: "variable_value"}

Defining variables:
assign variable_name to variable_value

Creates a variable with the name of "variable_name" and value of "variable_value".

-----

logging variables:
log variable_name

Searches the callstack for the variable "variable_name" and outputs it to the application console.

-----

pulling variables:
pull variable_name

Moves the variable "variable_name" from the heap to the callstack.

-----

pushing variables:
push variable_name

Moves the variable "variable_name" from the callstack to the heap.

-----

dropping variables:
drop variable_name

Removes the variable "variable_name" from the callstack and the heap.

-----

overwriting variables:
owrite variable_name to variabe_value

Overwrites the specified "variable_name" value with "variable_value".

-----

Math:

eval number1 operation number2

valid operations:
+: addition
-: subtraction
*: multiplication
/: division
%: modulus

Evaluates the specified mathmatical operations.

-----

show:

show callstack / heap

Outputs the callstack or heap to the application console.

-----

listeners:

listener add / remove key => raw code

add: handler that binds the raw code to the key
remove: handler that unbinds the raw code from the key

Example syntax:
listener add a => log example_var
listener remove a => log example_var

Listeners can have multiple instrunctions given, separation by a semicolon.
Example:
listener add a => assign name to value; pull name; log name

-----

display screen:
The display screen is a grid of 53x50 pixels. Each pixel has an ID between 1 and 2650. It starts at the top left pixel, and ends at the bottom right.
Pixel example ID = 40

changing the color of a pixel:
screen pixel pixelID to color colorID
list of color IDS:
0: white
1: black
2: red
3: green
4: blue
5: cyan
6: magenta
7: yellow
8: orange
9: brown
10: pink
11: purple
12: gray
13: light gray
14: dark gray

Variables can be used as pixelIDs and colorIDs by prefixing the variable with "v:".
Example:
screen pixel v:example_var to color v:example_var

Listeners can be used to change the color of a pixel.
Example: listener add a => screen pixel 40 to color 1
