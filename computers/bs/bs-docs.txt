> - shift pointer right
< - shift pointer left

+ - incrememnt cell value
: - increment if cell is zero

- - decrement cell value
_ = decrement if cell is zero

. - output cell value
, - input cell value (one character only)

` - speed up program time 
~ - slow down program time

[ loop ] - if cell value at pointer is not 0, loop
    common loop +++[>+++++<-]

conditionals

{ - if cell is 0, goto next }
( - if cell is not 0, goto next )

use typesets to change the character set
    tD - Decimal
    tB - Binary
    tO - Octal
    tX - Hexadecimal
    tU - Unicode




===================== EXAMPLES =====================




MULTIPLICATION

{symbol} = type (>, <, <+, etc.)

one product:

factor1{+}[>factor2{+}<-]
+++[>+++++<-]

= 3 * 5

cells needed: 2

array of products:

arrayLength+1{>}factor1{+}[<factor2{+}>-]<[arrayLength{<+}arrayLength{>}-]
>>>>>+++[<+++++>-]<[<+<+<+<+>>>>-]

OR

factor1{+}[>factor2{+}<-]>[arrayLength{>+}arrayLength{<}-]
+++[>+++++<-]>[>+>+>+>+<<<<-]