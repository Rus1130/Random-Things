> - shift pointer right
< - shift pointer left

+ - incrememnt cell
: - increment if cell is zero

- - decrement cell
_ = decrement if cell is zero

. - output cell
, - input cell (one character only)

` - speed up program time 
~ - slow down program time

[ … ] - if cell at pointer is not 0, run … until cell is 0
    common loop +++[>+++++<-]

conditional statements

= … $ - if cell is 0, run …
! … $ - if cell is not 0, run …

\0-1 - runs a bullshit program

use typesets to change the character set
    tD - Decimal
    tB - Binary
    tO - Octal
    tX - Hexadecimal
    tU - Unicode




===================== EXAMPLES =====================






{symbol} = type (>, <, <+, etc.)

one product:

factor1{+}[>factor2{+}<-]
+++[>+++++<-]

= 3 * 5

cells needed: 2

array of products:

arrayLength+1{>}factor1{+}[<factor2{+}>-]<[arrayLength{<+}arrayLength{>}-]
>>>>>+++[<+++++>-]<[<+<+<+<+>>>>-]

OR

factor1{+}[>factor2{+}<-]>[arrayLength{>+}arrayLength{<}-]
+++[>+++++<-]>[>+>+>+>+<<<<-]