? - optional
... - repeatable

let gen = new Genogram(id, options?);
initialize the genogram
    id (string) - the id of the element to hold the genogram
    options (object) -  options available
        options.height (integer) - the height of the genogram (default 500)
        options.width (integer) - the width of the genogram (default 500)
        options.fullscreen (boolean) - whether to make the genogram fullscreen (default false) (overrides height and width)
            
let Node = gen.createNode("Name");

Node.setDetails(details)
adds details to the node, ('description' is the only predefined detail)
    details (object) - the details to use
 
gen.createNode(name)
creates a new node with the given name
    name (string) - the name of the node
    returns (object): the new node object

gen.getNode(name)
gets a node by name
    name (string) - the name of the node
    returns (object): the node object

gen.createTree(foundingNode)
creates a new node with the given founding member
    foundingMember (object) - the founding node of the tree
    returns (object): the new node object

gen.getTree()
gets the tree object
    returns (object): the tree object

gen.link(node1, node2)
creates a partner link between two nodes
    node1 (object) - the first node
    node2 (object) - the second node
    returns (object): the tree

gen.parentalLink(father, mother, children)
give the children nodes parents
    father (object) - the father node
        mother (object) - the mother node
    children (array) - the children nodes
    returns (object): the tree
        Note: to omit a parent, pass 0





